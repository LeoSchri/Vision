@model List<Vision_V1.Models.CharacterEvolvement>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Templates/IndexTemplate.cshtml";
}

@section Title{Character devolopment}

@section Links{
    <span class="right">
        @if (Vision_V1.ViewModels.PageManager.CurrentScene != null)
        {
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("PickForCD","CharacterEvolvements")'">
                <img src="~/Content/Icons/Add.png" alt="Pick evolvements" class="small_image" />
            </button>
        }
        else
        {
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create","CharacterEvolvements")'">
                <img src="~/Content/Icons/New.png" alt="Create character evolvement" class="small_image" />
            </button>
        }
        @if (Vision_V1.ViewModels.PageManager.CurrentCharacterEvolvement != null)
        {
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("IndexToList","CharacterEvolvements")'">
                <img src="~/Content/Icons/Minimize.png" alt="Back to list" class="small_image" />
            </button>
        }
    </span>
}

@section Table{
    @if (Model == null || !Model.Any())
    {
        <div class="row">
            <div class="col-lg-11 col-lg-offset-1 padding-5">No Character developement steps yet.</div>
        </div>
    }
    else
    {
        <table class="table">
            <tr>
                @if (Vision_V1.ViewModels.PageManager.CurrentScene != null)
                {
                    <th>
                        Character
                    </th>

                }
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().CharacterDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().LastModified)
                </th>
                <th></th>
            </tr>

            @{
                var characterEvolvementList = Model.OrderBy(model => model.ID).ToList();
            }
            @foreach (var characterEv in characterEvolvementList)
            {
                var color = Vision_V1.Models.Types.ColorSchema.PrimaryDark;
                <tr style="background-color:@color">
                    @if (Vision_V1.ViewModels.PageManager.CurrentScene != null)
                    {
                        <td>
                            @Html.DisplayFor(model => characterEv.Character.Name)
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => characterEv.Name)
                    </td>
                    <td>
                        @characterEv.CharacterDescriptionShort()
                    </td>
                    <td class="text-smallest">
                        @Html.DisplayFor(modelItem => characterEv.LastModified)
                    </td>
                    <td>
                        <span class="right">
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Details","CharacterEvolvements", new { id = characterEv.ID })'">
                                <img src="~/Content/Icons/Details.png" alt="Details" class="small_image" />
                            </button>
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Edit","CharacterEvolvements", new { id = characterEv.ID })'">
                                <img src="~/Content/Icons/Edit.png" alt="Edit" class="small_image" />
                            </button>
                            @if (Vision_V1.ViewModels.PageManager.CurrentScene != null)
                            {
                                <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("RemoveEvolvementFromScene","CharacterEvolvements", new { id = characterEv.ID })'">
                                    <img src="~/Content/Icons/Remove.png" alt="Delete" class="small_image" />
                                </button>
                            }
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Delete","CharacterEvolvements", new { id = characterEv.ID })'">
                                <img src="~/Content/Icons/Trash.png" alt="Delete" class="small_image" />
                            </button>
                        </span>
                    </td>
                </tr>
            }
        </table>
                }
}