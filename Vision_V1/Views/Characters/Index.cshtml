@model List<Vision_V1.Models.Character>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Templates/IndexTemplate.cshtml";
}

@if (Vision_V1.ViewModels.PageManager.CurrentScene != null)
{
    @section Title{Attendant characters}
}
else
{
    @section Title{Characters}
}

@section Links{
<span class="right">
    @if (Vision_V1.ViewModels.PageManager.CurrentScene != null)
    {
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("PickForAC","Characters")'">
            <img src="~/Content/Icons/Add.png" alt="Create character" class="small_image" />
        </button>
        if (Vision_V1.ViewModels.PageManager.CurrentCharacter != null)
        {
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("IndexToList","Characters")'">
                <img src="~/Content/Icons/Minimize.png" alt="Back to list" class="small_image" />
            </button>
        }
    }
    else
    {
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create","Characters")'">
            <img src="~/Content/Icons/New.png" alt="Create character" class="small_image" />
        </button>
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Home","Attributes")'">
            <img src="~/Content/Icons/ManageColumns.png" alt="Manage attributes" class="small_image" />
        </button>
        if (Vision_V1.ViewModels.PageManager.CurrentCharacter != null)
        {
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("List","Characters")'">
                <img src="~/Content/Icons/Minimize.png" alt="Back to list" class="small_image" />
            </button>
        }
    }

</span>
}

@section Table{
    @if (Model == null || !Model.Any())
    {
        <div class="row">
            <div class="col-lg-11 col-lg-offset-1 padding-5">No Characters created yet.</div>
        </div>
    }
    else
    {
        <table class="table text-small">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                </th>
                @if (Vision_V1.ViewModels.PageManager.Attributes != null && Vision_V1.ViewModels.PageManager.Attributes.Any())
                {
                    foreach (var attribute in Vision_V1.ViewModels.PageManager.Attributes)
                    {
                        if(attribute.ShowInTable)
                        {
                            <th>
                                @attribute.Name
                            </th>
                        }
                    }
                }
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().IsMainCharacter)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().LastModified)
                </th>
                <th></th>
            </tr>

            @{
                var characterList = Model.OrderByDescending(model => model.IsMainCharacter).ThenBy(model => model.Name).ToList();
            }
            @foreach (var character in characterList)
            {
                var color = Vision_V1.Models.Types.ColorSchema.PrimaryDark;
                <tr style="background-color:@color">
                    <td>
                        @Html.DisplayFor(modelItem => character.Name)
                    </td>
                    @if (Vision_V1.ViewModels.PageManager.Attributes != null && Vision_V1.ViewModels.PageManager.Attributes.Any())
                    {
                        foreach (var attribute in Vision_V1.ViewModels.PageManager.Attributes)
                        {
                            if (attribute.ShowInTable)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => character.CharacterAttributes.ToList().Find(a=> a.Attribute.Name == attribute.Name).Value)
                                </td>
                            }
                        }
                    }
                    <td>
                        @if (character.IsMainCharacter)
                        {
                            <span class="text-success">YES</span>
                        }
                        else
                        {
                            <span class="text-warning">NO</span>
                        }
                    </td>
                    <td class="text-smallest">
                        @Html.DisplayFor(modelItem => character.LastModified)
                    </td>
                    <td>
                        <span class="right">
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Details","Characters", new { id = character.ID })'">
                                <img src="~/Content/Icons/Details.png" alt="Details" class="small_image" />
                            </button>
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Edit","Characters", new { id = character.ID })'">
                                <img src="~/Content/Icons/Edit.png" alt="Edit" class="small_image" />
                            </button>
                            @if (Vision_V1.ViewModels.PageManager.CurrentScene != null)
                            {
                                <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("RemoveAttendantCharacterFromScene","Characters", new { id = character.ID })'">
                                    <img src="~/Content/Icons/Remove.png" alt="Remove" class="small_image" />
                                </button>
                            }
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Delete","Characters", new { id = character.ID })'">
                                <img src="~/Content/Icons/Trash.png" alt="Delete" class="small_image" />
                            </button>
                        </span>
                    </td>
                </tr>
            }
        </table>
                }
}