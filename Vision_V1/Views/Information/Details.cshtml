@model Vision_V1.Models.Information

@{
    ViewBag.Title = "Details";
    ViewBag.Controller = "Information";
    Layout = "~/Views/Shared/Templates/DetailsTemplate.cshtml";
}

@section Title{@Model.Name}


@section Links{
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Edit","Information", new { id = Model.ID })'">
        <img src="~/Content/Icons/Edit.png" alt="Edit" class="small_image" />
    </button>
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Delete","Information", new { id = Model.ID })'">
        <img src="~/Content/Icons/Trash.png" alt="Delete" class="small_image" />
    </button>
    <button type="button" class="btn btn-default disabled" onclick="location.href='@Url.Action("ChangeStructure","Page")'">
        <img src="~/Content/Icons/SeperatorLight.png" alt="Seperator" class="small_image" />
    </button>
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("CreateChild","Information", new { id = Model.ID })'">
        <img src="~/Content/Icons/New.png" alt="Create child" class="small_image" />
    </button>
    @{
        var page = Vision_V1.ViewModels.PageManager.Pages.Find(p => p.Name == ViewBag.Title && p.Controller == ViewBag.Controller);
        var index = Vision_V1.ViewModels.PageManager.Pages.IndexOf(page);
        var isLast = false;
        if (index == Vision_V1.ViewModels.PageManager.Pages.Count - 1)
        {
            isLast = true;
        }
    }
    @if (Vision_V1.ViewModels.PageManager.Pages.Count > 1 && isLast)
    {
        <button type="button" class="btn btn-default disabled" onclick="location.href='@Url.Action("ChangeStructure","Page")'">
            <img src="~/Content/Icons/SeperatorLight.png" alt="Seperator" class="small_image" />
        </button>
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("RemovePageWID","Page", new { id = index })'">
            <img src="~/Content/Icons/Cancel.png" alt="Delete" class="small_image" />
        </button>
    }
}

@section Attribute1Name{@Html.DisplayNameFor(model => model.Name)}
@section Attribute1Prop{@Html.DisplayFor(model => model.Name)}

@section Attribute2Name{@Html.DisplayNameFor(model => model.Content)}
@section Attribute2Prop{@Html.DisplayFor(model => model.Content)}

@section Attribute3Name{@Html.DisplayNameFor(model => model.LastModified)}
@section Attribute3Prop{@Html.DisplayFor(model => model.LastModified)}

@section ListOf{
    @if (Model.SubContents != null && Model.SubContents.Any())
    {
        foreach (var info in Model.SubContents)
        {
            if (Session["InformationId"] != null && (int)Session["InformationId"] == info.ID && (string)Session["Type"] == "Edit")
            {
                @Html.Partial("~/Views/Information/EditChild.cshtml", info)
            }
            else if (Session["InformationId"] != null && (int)Session["InformationId"] == info.ID && (string)Session["Type"] == "Delete")
            {
                @Html.Partial("~/Views/Information/DeleteChild.cshtml", info)
            }
            else
            {
                @Html.Partial("~/Views/Information/DetailsC.cshtml", info)
            }
        }
    }
    @if (Session["InformationId"] != null && (string)Session["Type"] == "Create")
    {
        if (Model.ID == (int)Session["InformationId"])
        {
            @Html.Partial("~/Views/Information/CreateChild.cshtml", new Vision_V1.Models.Information(), new ViewDataDictionary(new Vision_V1.Models.Information()))
        }
    }
}


