@model List<Vision_V1.Models.Location>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Templates/IndexTemplate.cshtml";
}
@section Title{Locations}

@section Links{
    <span class="right">
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Create","Locations")'">
            <img src="~/Content/Icons/New.png" alt="Create core location" class="small_image" />
        </button>
        @if (Vision_V1.ViewModels.PageManager.CurrentLocation != null)
        {
            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("List","Locations")'">
                <img src="~/Content/Icons/Minimize.png" alt="Back to list" class="small_image" />
            </button>
        }
    </span>
}

@section Table{
    @if (Model == null || !Model.Any())
    {
        <div class="row">
            <div class="col-lg-11 col-lg-offset-1 padding-5 gray_text">No Locations created yet.</div>
        </div>
    }
    else
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
                </th>
                <th>
                    Located in
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Climate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().LastModified)
                </th>
                <th></th>
            </tr>
            @{
                var locationList = Model.OrderBy(model => model.Name).ToList();
            }
            @foreach (var location in locationList)
            {
                var color = Vision_V1.Models.Types.ColorSchema.PrimaryDark;
                if (Vision_V1.ViewModels.PageManager.CurrentLocation == location)
                {
                    color = Vision_V1.Models.Types.ColorSchema.Gray.Light;
                }
                <tr style="background-color:@color">
                    <td>
                        @Html.DisplayFor(modelItem => location.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => location.Type)
                    </td>
                    <td>
                        @location.DescriptionShort()
                    </td>
                    <td>
                        @if(location.ParentId != null)
                        {
                            <span>
                                @Html.DisplayFor(modelItem => location.Orientation) of @Html.DisplayFor(modelItem => location.Parent.Name)
                            </span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => location.Climate)
                    </td>
                    <td class="text-smaller">
                        @Html.DisplayFor(modelItem => location.LastModified)
                    </td>
                    <td>
                        <span class="right">
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Details","Locations", new { id = location.ID })'">
                                <img src="~/Content/Icons/Details.png" alt="Details" class="small_image" />
                            </button>
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Edit","Locations", new { id = location.ID })'">
                                <img src="~/Content/Icons/Edit.png" alt="Edit" class="small_image" />
                            </button>
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("CreateChild","Locations", new { id = location.ID })'">
                                <img src="~/Content/Icons/Add.png" alt="Create child" class="small_image" />
                            </button>
                            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Delete","Locations", new { id = location.ID })'">
                                <img src="~/Content/Icons/Trash.png" alt="Delete" class="small_image" />
                            </button>
                        </span>
                    </td>
                </tr>
            }

        </table>
                }
}
